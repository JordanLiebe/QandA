{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\AskPage.tsx\";\nimport React from 'react';\nimport { Page } from './Page';\nimport { Form, required, minLength } from './Form';\nimport { postQuestion } from './QuestionData';\nimport { Field } from './Field';\nexport const AskPage = () => {\n  const handleSubmit = async values => {\n    const question = await postQuestion({\n      title: values.title,\n      content: values.content,\n      userName: 'Fred',\n      created: new Date()\n    });\n    return {\n      success: question ? true : false\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    title: \"Ask a question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    submitCaption: \"Submit Your Question\",\n    validationRules: {\n      title: [{\n        validator: required\n      }, {\n        validator: minLength,\n        arg: 10\n      }],\n      content: [{\n        validator: required\n      }, {\n        validator: minLength,\n        arg: 50\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"title\",\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"content\",\n    label: \"Content\",\n    type: \"TextArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\nexport default AskPage;","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/AskPage.tsx"],"names":["React","Page","Form","required","minLength","postQuestion","Field","AskPage","handleSubmit","values","question","title","content","userName","created","Date","success","validator","arg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAAkD,QAAlD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,YAAY,GAAG,MAAOC,MAAP,IAA0B;AAC7C,UAAMC,QAAQ,GAAG,MAAML,YAAY,CAAC;AAClCM,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADoB;AAElCC,MAAAA,OAAO,EAAEH,MAAM,CAACG,OAFkB;AAGlCC,MAAAA,QAAQ,EAAE,MAHwB;AAIlCC,MAAAA,OAAO,EAAE,IAAIC,IAAJ;AAJyB,KAAD,CAAnC;AAMA,WAAO;AAAEC,MAAAA,OAAO,EAAEN,QAAQ,GAAG,IAAH,GAAU;AAA7B,KAAP;AACD,GARD;;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAC,sBADhB;AAEE,IAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE,CAAC;AAAEM,QAAAA,SAAS,EAAEd;AAAb,OAAD,EAA0B;AAAEc,QAAAA,SAAS,EAAEb,SAAb;AAAwBc,QAAAA,GAAG,EAAE;AAA7B,OAA1B,CADQ;AAEfN,MAAAA,OAAO,EAAE,CAAC;AAAEK,QAAAA,SAAS,EAAEd;AAAb,OAAD,EAA0B;AAAEc,QAAAA,SAAS,EAAEb,SAAb;AAAwBc,QAAAA,GAAG,EAAE;AAA7B,OAA1B;AAFM,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAsC,IAAA,IAAI,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAcD,CAxBM;AA0BP,eAAeX,OAAf","sourcesContent":["import React from 'react';\r\nimport { Page } from './Page';\r\nimport { Form, required, minLength, Values } from './Form';\r\nimport { postQuestion } from './QuestionData';\r\nimport { Field } from './Field';\r\n\r\nexport const AskPage = () => {\r\n  const handleSubmit = async (values: Values) => {\r\n    const question = await postQuestion({\r\n      title: values.title,\r\n      content: values.content,\r\n      userName: 'Fred',\r\n      created: new Date(),\r\n    });\r\n    return { success: question ? true : false };\r\n  };\r\n  return (\r\n    <Page title=\"Ask a question\">\r\n      <Form\r\n        submitCaption=\"Submit Your Question\"\r\n        validationRules={{\r\n          title: [{ validator: required }, { validator: minLength, arg: 10 }],\r\n          content: [{ validator: required }, { validator: minLength, arg: 50 }],\r\n        }}\r\n      >\r\n        <Field name=\"title\" label=\"Title\" />\r\n        <Field name=\"content\" label=\"Content\" type=\"TextArea\" />\r\n      </Form>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AskPage;\r\n"]},"metadata":{},"sourceType":"module"}