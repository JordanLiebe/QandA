{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\Field.tsx\";\nimport { FormContext } from './Form';\n/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\nimport { fontFamily, fontSize, gray5, gray2, gray6 } from './Styles';\nconst baseCSS = css`\n  box-sizing: border-box;\n  font-family: ${fontFamily};\n  font-size: ${fontSize};\n  margin-bottom: 5px;\n  padding: 8px 10px;\n  border: 1px solid ${gray5};\n  color: ${gray2};\n  background-color: white;\n  width: 100%;\n  :focus {\n    outline-color: ${gray5};\n  }\n  :disabled {\n    background-color: ${gray6};\n  }\n`;\nexport const Field = ({\n  name,\n  label,\n  type = 'Text'\n}) => jsx(FormContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, context => jsx(\"div\", {\n  css: css`\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 15px;\n        `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}, label && jsx(\"label\", {\n  css: css`\n              font-weight: bold;\n            `,\n  htmlFor: name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}, label), (type === 'Text' || type === 'Password') && jsx(\"input\", {\n  type: type.toLowerCase(),\n  id: name,\n  value: context.values[name] === undefined ? '' : context.values[name],\n  onChange: handleChange,\n  css: css`\n              ${baseCSS};\n            `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n}), type === 'TextArea' && jsx(\"textarea\", {\n  id: name,\n  value: context.values[name] === undefined ? '' : context.values[name],\n  onChange: handleChange,\n  css: css`\n              ${baseCSS};\n              height: 100px;\n            `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 11\n  }\n})));","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/Field.tsx"],"names":["FormContext","css","jsx","fontFamily","fontSize","gray5","gray2","gray6","baseCSS","Field","name","label","type","context","toLowerCase","values","undefined","handleChange"],"mappings":";AACA,SAASA,WAAT,QAA4B,QAA5B;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,UAA1D;AAQA,MAAMC,OAAO,GAAGP,GAAI;;iBAEHE,UAAW;eACbC,QAAS;;;sBAGFC,KAAM;WACjBC,KAAM;;;;qBAIID,KAAM;;;wBAGHE,KAAM;;CAd9B;AAkBA,OAAO,MAAME,KAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAI,GAAG;AAAtB,CAAD,KAC9B,IAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIC,OAAD,IACC;AACE,EAAA,GAAG,EAAEZ,GAAI;;;;SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOGU,KAAK,IACJ;AACE,EAAA,GAAG,EAAEV,GAAI;;aADX;AAIE,EAAA,OAAO,EAAES,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGC,KANH,CARJ,EAiBG,CAACC,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,UAA7B,KACC;AACE,EAAA,IAAI,EAAEA,IAAI,CAACE,WAAL,EADR;AAEE,EAAA,EAAE,EAAEJ,IAFN;AAGE,EAAA,KAAK,EACHG,OAAO,CAACE,MAAR,CAAeL,IAAf,MAAyBM,SAAzB,GAAqC,EAArC,GAA0CH,OAAO,CAACE,MAAR,CAAeL,IAAf,CAJ9C;AAME,EAAA,QAAQ,EAAEO,YANZ;AAOE,EAAA,GAAG,EAAEhB,GAAI;gBACLO,OAAQ;aARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAlBJ,EA8BGI,IAAI,KAAK,UAAT,IACC;AACE,EAAA,EAAE,EAAEF,IADN;AAEE,EAAA,KAAK,EACHG,OAAO,CAACE,MAAR,CAAeL,IAAf,MAAyBM,SAAzB,GAAqC,EAArC,GAA0CH,OAAO,CAACE,MAAR,CAAeL,IAAf,CAH9C;AAKE,EAAA,QAAQ,EAAEO,YALZ;AAME,EAAA,GAAG,EAAEhB,GAAI;gBACLO,OAAQ;;aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA/BJ,CAFJ,CADK","sourcesContent":["import React, { FC, useContext, ChangeEvent } from 'react';\r\nimport { FormContext } from './Form';\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { fontFamily, fontSize, gray5, gray2, gray6 } from './Styles';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n  type?: 'Text' | 'TextArea' | 'Password';\r\n}\r\n\r\nconst baseCSS = css`\r\n  box-sizing: border-box;\r\n  font-family: ${fontFamily};\r\n  font-size: ${fontSize};\r\n  margin-bottom: 5px;\r\n  padding: 8px 10px;\r\n  border: 1px solid ${gray5};\r\n  color: ${gray2};\r\n  background-color: white;\r\n  width: 100%;\r\n  :focus {\r\n    outline-color: ${gray5};\r\n  }\r\n  :disabled {\r\n    background-color: ${gray6};\r\n  }\r\n`;\r\n\r\nexport const Field: FC<Props> = ({ name, label, type = 'Text' }) => (\r\n  <FormContext.Consumer>\r\n    {(context) => (\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-bottom: 15px;\r\n        `}\r\n      >\r\n        {label && (\r\n          <label\r\n            css={css`\r\n              font-weight: bold;\r\n            `}\r\n            htmlFor={name}\r\n          >\r\n            {label}\r\n          </label>\r\n        )}\r\n        {(type === 'Text' || type === 'Password') && (\r\n          <input\r\n            type={type.toLowerCase()}\r\n            id={name}\r\n            value={\r\n              context.values[name] === undefined ? '' : context.values[name]\r\n            }\r\n            onChange={handleChange}\r\n            css={css`\r\n              ${baseCSS};\r\n            `}\r\n          />\r\n        )}\r\n        {type === 'TextArea' && (\r\n          <textarea\r\n            id={name}\r\n            value={\r\n              context.values[name] === undefined ? '' : context.values[name]\r\n            }\r\n            onChange={handleChange}\r\n            css={css`\r\n              ${baseCSS};\r\n              height: 100px;\r\n            `}\r\n          />\r\n        )}\r\n      </div>\r\n    )}\r\n  </FormContext.Consumer>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}