{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\QuestionPage.tsx\";\nimport { useState, Fragment, useEffect } from 'react';\nimport { Page } from './Page';\nimport { getQuestion } from './QuestionData';\nimport { AnswerList } from './AnswerList';\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { gray3, gray6 } from './Styles';\nexport const QuestionPage = ({\n  match\n}) => {\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    const doGetQuestion = async questionId => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n\n    if (match.params.questionId) {\n      const questionId = Number(match.params.questionId);\n      doGetQuestion(questionId);\n    }\n  }, [match.params.questionId]);\n  return jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    css: css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, jsx(\"div\", {\n    css: css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, question === null ? '' : question.title), question !== null && jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, jsx(\"p\", {\n    css: css`\n                margin-top: 0px;\n                background-color: white;\n              `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, question.content), jsx(\"div\", {\n    css: css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, `Asked by ${question.userName} on\n            ${question.created.toLocaleDateString()}\n            ${question.created.toLocaleTimeString()}`), jsx(AnswerList, {\n    data: question.answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))));\n};\n{\n  /* <Page>Question Page {match.params.questionId}</Page> */\n}","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/QuestionPage.tsx"],"names":["useState","Fragment","useEffect","Page","getQuestion","AnswerList","css","jsx","gray3","gray6","QuestionPage","match","question","setQuestion","doGetQuestion","questionId","foundQuestion","params","Number","title","content","userName","created","toLocaleDateString","toLocaleTimeString","answers"],"mappings":";AAAA,SAAoBA,QAApB,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAAuBC,WAAvB,QAA0C,gBAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAGA;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,UAA7B;AAMA,OAAO,MAAMC,YAAkD,GAAG,CAAC;AACjEC,EAAAA;AADiE,CAAD,KAE5D;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAsB,IAAtB,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,MAAOC,UAAP,IAA8B;AAClD,YAAMC,aAAa,GAAG,MAAMZ,WAAW,CAACW,UAAD,CAAvC;AACAF,MAAAA,WAAW,CAACG,aAAD,CAAX;AACD,KAHD;;AAIA,QAAIL,KAAK,CAACM,MAAN,CAAaF,UAAjB,EAA6B;AAC3B,YAAMA,UAAU,GAAGG,MAAM,CAACP,KAAK,CAACM,MAAN,CAAaF,UAAd,CAAzB;AACAD,MAAAA,aAAa,CAACC,UAAD,CAAb;AACD;AACF,GATQ,EASN,CAACJ,KAAK,CAACM,MAAN,CAAaF,UAAd,CATM,CAAT;AAWA,SACE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAET,GAAI;;;;8BAIaG,KAAM;;SAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,GAAG,EAAEH,GAAI;;;;WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGM,QAAQ,KAAK,IAAb,GAAoB,EAApB,GAAyBA,QAAQ,CAACO,KAPrC,CATF,EAmBGP,QAAQ,KAAK,IAAb,IACC,IAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEN,GAAI;;;eADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGM,QAAQ,CAACQ,OANZ,CADF,EASE;AACE,IAAA,GAAG,EAAEd,GAAI;;;yBAGEE,KAAM;eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,YAAWI,QAAQ,CAACS,QAAS;cAC/BT,QAAQ,CAACU,OAAT,CAAiBC,kBAAjB,EAAsC;cACtCX,QAAQ,CAACU,OAAT,CAAiBE,kBAAjB,EAAsC,EATxC,CATF,EAoBE,IAAC,UAAD;AAAY,IAAA,IAAI,EAAEZ,QAAQ,CAACa,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CApBJ,CADF,CADF;AAgDD,CAhEM;AAkEP;AACE;AACD","sourcesContent":["import React, { FC, useState, Fragment, useEffect } from 'react';\r\nimport { Page } from './Page';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { QuestionData, getQuestion } from './QuestionData';\r\nimport { AnswerList } from './AnswerList';\r\nimport { Form } from './Form';\r\nimport { Field } from './Field';\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { gray3, gray6 } from './Styles';\r\n\r\ninterface RouteParams {\r\n  questionId: string;\r\n}\r\n\r\nexport const QuestionPage: FC<RouteComponentProps<RouteParams>> = ({\r\n  match,\r\n}) => {\r\n  const [question, setQuestion] = useState<QuestionData | null>(null);\r\n\r\n  useEffect(() => {\r\n    const doGetQuestion = async (questionId: number) => {\r\n      const foundQuestion = await getQuestion(questionId);\r\n      setQuestion(foundQuestion);\r\n    };\r\n    if (match.params.questionId) {\r\n      const questionId = Number(match.params.questionId);\r\n      doGetQuestion(questionId);\r\n    }\r\n  }, [match.params.questionId]);\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          background-color: white;\r\n          padding: 15px 20px 20px 20px;\r\n          border-radius: 4px;\r\n          border: 1px solid ${gray6};\r\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            font-size: 19px;\r\n            font-weight: bold;\r\n            margin: 10px 0px 5px;\r\n          `}\r\n        >\r\n          {question === null ? '' : question.title}\r\n        </div>\r\n\r\n        {question !== null && (\r\n          <Fragment>\r\n            <p\r\n              css={css`\r\n                margin-top: 0px;\r\n                background-color: white;\r\n              `}\r\n            >\r\n              {question.content}\r\n            </p>\r\n            <div\r\n              css={css`\r\n                font-size: 12px;\r\n                font-style: italic;\r\n                color: ${gray3};\r\n              `}\r\n            >\r\n              {`Asked by ${question.userName} on\r\n            ${question.created.toLocaleDateString()}\r\n            ${question.created.toLocaleTimeString()}`}\r\n            </div>\r\n            <AnswerList data={question.answers} />\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\n{\r\n  /* <Page>Question Page {match.params.questionId}</Page> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}