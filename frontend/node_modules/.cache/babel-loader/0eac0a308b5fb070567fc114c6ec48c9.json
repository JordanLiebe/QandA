{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\QuestionList.tsx\";\nimport { memo } from 'react';\n/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\nimport { gray5, accent2 } from './Styles';\nimport { Question } from './Question';\nexport const QuestionList = memo(({\n  data,\n  renderItem\n}) => {\n  console.log('Rendering QuestionList', data, renderItem);\n  return jsx(\"ul\", {\n    css: css`\n        list-style: none;\n        margin: 10px 0 0 0;\n        padding: 0px 20px;\n        background-color: #fff;\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n        border-top: 3px solid ${accent2};\n        box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n      `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, data.map(question => jsx(\"li\", {\n    key: question.questionId,\n    css: css`\n            border-top: 1px solid ${gray5};\n            :first-of-type {\n              border-top: none;\n            }\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, renderItem ? renderItem(question) : jsx(Question, {\n    data: question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 48\n    }\n  }))));\n});","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/QuestionList.tsx"],"names":["memo","css","jsx","gray5","accent2","Question","QuestionList","data","renderItem","console","log","map","question","questionId"],"mappings":";AAAA,SAAoBA,IAApB,QAAgC,OAAhC;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,UAA/B;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAQA,OAAO,MAAMC,YAAuB,GAAGN,IAAI,CAAC,CAAC;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,IAAtC,EAA4CC,UAA5C;AACA,SACE;AACE,IAAA,GAAG,EAAEP,GAAI;;;;;;;gCAOiBG,OAAQ;;OARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGG,IAAI,CAACI,GAAL,CAAUC,QAAD,IACR;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACC,UADhB;AAEE,IAAA,GAAG,EAAEZ,GAAI;oCACiBE,KAAM;;;;WAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGK,UAAU,GAAGA,UAAU,CAACI,QAAD,CAAb,GAA0B,IAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATvC,CADD,CAZH,CADF;AA4BD,CA9B0C,CAApC","sourcesContent":["import React, { FC, memo } from 'react';\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { gray5, accent2 } from './Styles';\r\nimport { QuestionData } from './QuestionData';\r\nimport { Question } from './Question';\r\nimport { render } from '@testing-library/react';\r\n\r\ninterface Props {\r\n  data: QuestionData[];\r\n  renderItem?: (item: QuestionData) => JSX.Element;\r\n}\r\n\r\nexport const QuestionList: FC<Props> = memo(({ data, renderItem }) => {\r\n  console.log('Rendering QuestionList', data, renderItem);\r\n  return (\r\n    <ul\r\n      css={css`\r\n        list-style: none;\r\n        margin: 10px 0 0 0;\r\n        padding: 0px 20px;\r\n        background-color: #fff;\r\n        border-bottom-left-radius: 4px;\r\n        border-bottom-right-radius: 4px;\r\n        border-top: 3px solid ${accent2};\r\n        box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n      `}\r\n    >\r\n      {data.map((question) => (\r\n        <li\r\n          key={question.questionId}\r\n          css={css`\r\n            border-top: 1px solid ${gray5};\r\n            :first-of-type {\r\n              border-top: none;\r\n            }\r\n          `}\r\n        >\r\n          {renderItem ? renderItem(question) : <Question data={question} />}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}