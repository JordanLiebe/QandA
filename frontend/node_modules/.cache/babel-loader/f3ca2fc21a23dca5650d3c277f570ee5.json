{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\SearchPage.tsx\";\nimport { useState, useEffect } from 'react';\nimport { Page } from './Page';\nimport { searchQuestions } from './QuestionData';\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nexport const SearchPage = ({\n  location\n}) => {\n  const [questions, setQuestions] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const search = searchParams.get('criteria') || '';\n  useEffect(() => {\n    const doSearch = async criteria => {\n      const foundResults = await searchQuestions(criteria);\n      setQuestions(foundResults);\n    };\n  });\n  return jsx(Page, {\n    title: \"Search Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/SearchPage.tsx"],"names":["useState","useEffect","Page","searchQuestions","jsx","SearchPage","location","questions","setQuestions","searchParams","URLSearchParams","search","get","doSearch","criteria","foundResults"],"mappings":";AAAA,SAAoBA,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AAEA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,eAAT,QAA8C,gBAA9C;AACA;;AACA,SAAcC,GAAd,QAAyB,eAAzB;AAEA,OAAO,MAAMC,UAAmC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAiB,EAAjB,CAA1C;AAEA,QAAMS,YAAY,GAAG,IAAIC,eAAJ,CAAoBJ,QAAQ,CAACK,MAA7B,CAArB;AACA,QAAMA,MAAM,GAAGF,YAAY,CAACG,GAAb,CAAiB,UAAjB,KAAgC,EAA/C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,MAAOC,QAAP,IAA4B;AAC3C,YAAMC,YAAY,GAAG,MAAMZ,eAAe,CAACW,QAAD,CAA1C;AACAN,MAAAA,YAAY,CAACO,YAAD,CAAZ;AACD,KAHD;AAID,GALQ,CAAT;AAOA,SAAO,IAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAdM","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Page } from './Page';\r\nimport { QuestionList } from './QuestionList';\r\nimport { searchQuestions, QuestionData } from './QuestionData';\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nexport const SearchPage: FC<RouteComponentProps> = ({ location }) => {\r\n  const [questions, setQuestions] = useState<QuestionData[]>([]);\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const search = searchParams.get('criteria') || '';\r\n\r\n  useEffect(() => {\r\n    const doSearch = async (criteria: string) => {\r\n      const foundResults = await searchQuestions(criteria);\r\n      setQuestions(foundResults);\r\n    };\r\n  });\r\n\r\n  return <Page title=\"Search Results\" />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}