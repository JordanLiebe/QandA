{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan.Liebe\\\\Repos\\\\QandA\\\\frontend\\\\src\\\\Form.tsx\";\nimport { useState, createContext } from 'react';\nimport { PrimaryButton, gray5, gray6 } from './Styles';\n/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\nexport const FormContext = createContext({\n  values: {}\n});\nexport const required = value => value === undefined || value === null || value === '' ? 'This must be populated' : '';\nexport const Form = ({\n  submitCaption,\n  children\n}) => {\n  const [values, setValues] = useState({});\n  return jsx(FormContext.Provider, {\n    value: {\n      values,\n      setValue: (fieldName, value) => {\n        setValues({ ...values,\n          [fieldName]: value\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, jsx(\"form\", {\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, jsx(\"fieldset\", {\n    css: css`\n            margin: 10px auto 0 auto;\n            padding: 30px;\n            width: 350px;\n            background-color: ${gray6};\n            border-radius: 4px;\n            border: 1px solid ${gray5};\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, children, jsx(\"div\", {\n    css: css`\n              margin: 30px 0px 0px 0px;\n              padding: 20px 0px 0px 0px;\n              border-top: 1px solid ${gray5};\n            `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, jsx(PrimaryButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, submitCaption)))));\n};","map":{"version":3,"sources":["C:/Users/Jordan.Liebe/Repos/QandA/frontend/src/Form.tsx"],"names":["useState","createContext","PrimaryButton","gray5","gray6","css","jsx","FormContext","values","required","value","undefined","Form","submitCaption","children","setValues","setValue","fieldName"],"mappings":";AAAA,SAAoBA,QAApB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,KAA/B,QAA4C,UAA5C;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAeA,OAAO,MAAMC,WAAW,GAAGN,aAAa,CAAmB;AAAEO,EAAAA,MAAM,EAAE;AAAV,CAAnB,CAAjC;AAIP,OAAO,MAAMC,QAAmB,GAAIC,KAAD,IACjCA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAAnD,GACI,wBADJ,GAEI,EAHC;AAKP,OAAO,MAAME,IAAe,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AAC9D,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsBf,QAAQ,CAAS,EAAT,CAApC;AACA,SACE,IAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MADK;AAELQ,MAAAA,QAAQ,EAAE,CAACC,SAAD,EAAoBP,KAApB,KAAmC;AAC3CK,QAAAA,SAAS,CAAC,EAAE,GAAGP,MAAL;AAAa,WAACS,SAAD,GAAaP;AAA1B,SAAD,CAAT;AACD;AAJI,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAM,IAAA,UAAU,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEL,GAAI;;;;gCAIaD,KAAM;;gCAEND,KAAM;;WAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGW,QAXH,EAYE;AACE,IAAA,GAAG,EAAET,GAAI;;;sCAGiBF,KAAM;aAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,IAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BU,aAA9B,CAPF,CAZF,CADF,CARF,CADF;AAmCD,CArCM","sourcesContent":["import React, { FC, useState, createContext } from 'react';\r\nimport { PrimaryButton, gray5, gray6 } from './Styles';\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nexport interface Values {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface FormContextProps {\r\n  values: Values;\r\n  setValue?: (fieldName: string, value: any) => void;\r\n}\r\n\r\ninterface Props {\r\n  submitCaption?: string;\r\n}\r\n\r\nexport const FormContext = createContext<FormContextProps>({ values: {} });\r\n\r\ntype Validator = (value: any, args?: any) => string;\r\n\r\nexport const required: Validator = (value: any): string =>\r\n  value === undefined || value === null || value === ''\r\n    ? 'This must be populated'\r\n    : '';\r\n\r\nexport const Form: FC<Props> = ({ submitCaption, children }) => {\r\n  const [values, setValues] = useState<Values>({});\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        values,\r\n        setValue: (fieldName: string, value: any) => {\r\n          setValues({ ...values, [fieldName]: value });\r\n        },\r\n      }}\r\n    >\r\n      <form noValidate={true}>\r\n        <fieldset\r\n          css={css`\r\n            margin: 10px auto 0 auto;\r\n            padding: 30px;\r\n            width: 350px;\r\n            background-color: ${gray6};\r\n            border-radius: 4px;\r\n            border: 1px solid ${gray5};\r\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n          `}\r\n        >\r\n          {children}\r\n          <div\r\n            css={css`\r\n              margin: 30px 0px 0px 0px;\r\n              padding: 20px 0px 0px 0px;\r\n              border-top: 1px solid ${gray5};\r\n            `}\r\n          >\r\n            <PrimaryButton type=\"submit\">{submitCaption}</PrimaryButton>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}